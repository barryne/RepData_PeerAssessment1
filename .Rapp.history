f <- function(x) {#
 g <- function(y) {#
 y+ z#
}#
z <-4 #
x+ g(x)#
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {#
NA}
x <-5
y <- if(x < 3) {#
 NA#
} else {#
10#
}
y
ls()
str()?
return
?str()
str(split)
x <- c(rnorm(10), runif(10), rnorm(10,1))
f <- gl(3,10)
x
f
tapply(x, f, mean)
tapply(x, f, mean, simplify = FALSE)
split(x, f)
library(datasets)
head(airquality)
s <- split( airquality, airquality$Month)
lapply(s, function(x) colmeans(x[,c("Ozone", "Solar.R", "Wind")]))
lapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")]))
<rep()
?rep()
rep(1, 4)
rep(4, 1)
mapply(rep, 1:4, 4:1)
data(iris)
?iris
head(iris)
tapply(iris, Species, mean)
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
data(mtcars)
?mtcars
head(mtcars)
sapply(split(mtcars$hp, mtcars$cyl), mean)
debug(ls)
ls()
n
install.packages("swirl")
library(swirl)
exit
stop
stop()
library(swirl)
ls()
rm(list=ls())
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z -1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my
my_div
1:20
pi:10
15:1
?":"
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vext >=6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Nadine")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
?setinv
??setinv
?solve
library(swirl)
ls()
rm(list=ls())
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vext <- c(foo = 11, bar = 2, norf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vext
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(mydata) <- cnames
colnames(my_data) <- cnames
my_data
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?dpois
?ppois
set.seed(10)
x <- rbinom(10, 10, 0.5)
x
e <- rnorm(10, 0, 20)
e
y <- 0.5 + 2 * x + e
y
?rbinom
fileURL <- "https://github.com/barryne/RepData_PeerAssessment1/blob/master/activity.zip?raw=true"
temp <- tempfile()
download.file(fileURL, temp, method = "curl")
unzip(temp, fileURL)
activitydf <- read.csv("activity.csv")
getwd()
setwd("/Users/marybarry/nadine/DataScience/RepresWk2")
activitydf <- read.csv("activity.csv")
activityNNA <- na.omit(activitydf)
head(activityNNA)
dailytotal <- ddply(activityNNA, .(date), summarise, sumsteps = sum(steps))
install.packages(ddply)
install.packages(plyr)
install.packages("plyr")
library(plyr)
dailytotal <- ddply(activityNNA, .(date), summarise, sumsteps = sum(steps))
head(dailytotal)
class(dailytotal)
intervalwkavg <- ddply(activityNNA, .(interval), summarise, avgsteps = mean(steps))
plot(intervalwkavg$interval, intervalwkavg$avgsteps, type="l", main = "Average number of steps taken by interval", xlab="5-minute interval", ylab="average steps")
?complete.cases()
ok <- complete.cases(activitydf)
sum(!ok)
summary(activitydf)
?absolute()
?round()
?integer()
head(intervalwkavg)
tail(intervalwkavg)
tail(dailytotal)
mean(intervalwkavg(avgsteps))
mean(intervalwkavg$avgsteps)
head(intervalwkavg, 20)
head(intervalwkavg, 50-70)
?join()
?arrange()
summary()
stepsInterval<-aggregate(steps~interval,data=activity,mean,na.rm=TRUE)
stepsInterval<-aggregate(steps~interval,data=activitydf,mean,na.rm=TRUE)
head(stepsInterval)
datedate <- as.Date(activitydf$date)
summary(datedate)
as.Date(activitydf$date)
summary(activitydf$date)
activitydf$date <- as.Date(activitydf$date)
summary(activitydf$date)
activitydf$daytype <- as.factor(ifelse(weekday(activitydf$date)%in% c("Saturday", "Sunday"), "Weekend", "Weekday"))
activitydf$daytype <- as.factor(ifelse(weekday(activitydf$date) %in% c("Saturday", "Sunday"), "Weekend", "Weekday"))
?weekday
?weekdays
activitydf$daytype <- as.factor(ifelse(weekdays(activitydf$date) %in% c("Saturday", "Sunday"), "Weekend", "Weekday"))
summary(activitydf$daytype)
?aggregate
intervalwkavg2 <- aggregate(steps~interval+daytype,activitydf,mean)
head(intervalwkavg2)
?plot
install.packages(lattice)
install.packages("lattice")
library(lattice)
xyplot(steps~interval|factor(daytype),data=intervalwkavg2,aspect=1/2,type="l")
getwd()
setwd("/Users/marybarry/nadine/DataScience/RepresWk2/RepData_PeerAssessment1")
?format
